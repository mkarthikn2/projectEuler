'''
Each new term in the Fibonacci sequence is generated by adding 
the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values 
do not exceed four million, find the sum of the even-valued terms.
'''


def even_fibonacci_sum(threshold):
  '''
  Return sum of all even fibonannci numbers
  less than or equal to a threshold
  '''

  # Base case
  if threshold < 2:
    return 0

  total_even_sum = 0
  t1 = 1
  t2 = 1

  while t2 <= threshold:
    if t2%2 == 0:
      total_even_sum += t2
    temp = t1+ t2
    t1 = t2
    t2 = temp


  return total_even_sum


def tests():
  threshold = 5
  assert even_fibonacci_sum(5) == 2
  assert even_fibonacci_sum(10) == 10
  assert even_fibonacci_sum(20) == 10
  assert even_fibonacci_sum(40) == 44
  print("Tests passed successfully")


if __name__ == "__main__":
  tests()
  threshold = 4e+6
  print(even_fibonacci_sum(threshold))